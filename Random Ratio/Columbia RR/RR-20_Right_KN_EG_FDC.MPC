\                        C O M M E N T S
\
\ Random ratio schedule.  Ratio can be set by altering the number of non-reinfroced options in. Modified for RNAC set up - eyd3-22-13
\ list q.  There is no cap on the number of non-reinforced bar presses.



DISKFORMAT = 13.1
DISKVARS = p,w,e,f,c    \"DISKVARS" only prints selected variables to datafile
DISK COLUMNS = 1



                  \  Inputs ****************************
^headIN = 4       \  IR head entry detector

^LLever2 = 2       \  left lever press
^RLever2 = 1       \  right lever press


                  \  Outputs ****************************
^leftlever = 8
^rightlever = 7

^dipper = 6        \ On Liquid Dipper

^house = 1         \houselight




\  VARIABLES USED IN THIS PROGRAM
\   a =
\   b =
\   c = resetting bar press counter
\   d = counter for e and f array
\   e = responses/min array Left Lever
\   f = responses/min array Right Lever
\   g = responses/min counter Left Lever
\   h = responses/min counter Right Lever
\   i = Lever selector variable
\   j =
\   (k) = Clock for session timer
\   l = RR reinforcement Selection
\   m = counter for n array
\   n = array for RR requirements
\   o =
\   p =
\   (q) = array for RR Reinforcement selection
\   r =
\   (s) = lever record 1=Left, 2=Right
\   t =
\   u =
\   v =
\  (w) = time and event code for matlab
\   x =
\   y =
\   z =


\  \  SHOW POSITIONS
\  1 = current FR value
\  2 = Dipper Timer
\  3 = dipper counter
\  4 = Session Time (sec)
\  5 = head entries
\  6 =

\======================================================
\ MATLAB standardized codes
\ *** = used in this program

^Feed1 = 0021
^Feed2 = 0022
^Feed3 = 0023
^Feed4 = 0024
^DipOn = 0025   \***
^DipOff = 0026   \***
^LLeverOn = 0027 \***
^RLeverOn= 0028  \***
^LLeverOff = 0029 \***
^RLeverOff = 0030 \***
^LightOff1 = 0031
^LightOff2 = 0032
^LightOff3 = 0033
^LightOff4 = 0034
^LightOn1 = 0041
^LightOn2 = 0042
^LightOn3 = 0043
^LightOn4 = 0044
^ToneOff1 = 0051
^ToneOff2 = 0052
^ToneOff3 = 0053
^ToneOff4 = 0054
^ToneOn1 = 0061
^ToneOn2 = 0062
^ToneOn3 = 0063
^ToneOn4 = 0064
^WNoiseOff1 = 0071
^WNoiseOff2 = 0072
^WNoiseOff3 = 0073
^WNoiseOff4 = 0074
^WNoiseOn1 = 0081
^WNoiseOn2 = 0082
^WNoiseOn3 = 0083
^WNoiseOn4 = 0084

^StartTrial = 0111
^EndTrial = 0112
^StartSession = 0113  \***
^EndSession = 0114   \***
^HouseLightOff = 0115
^HouseLightOn = 0116
^OnFan = 0117\***
^OffFan = 0118\***
^StartIti = 0121
^EndIti = 0122
^LightOffStan = 0201
^LightOnStan = 0202
^LightOffComp = 0203
^LightOnComp = 0204
^LightOffCtrl = 0205
^LightOnCtrl = 0206
^FeedStan = 0207
^FeedComp = 0208
^StartStanFlash = 0209
^StopStanFlash = 0211
^StartCompFlash = 0212
^StopCompFlash = 0213
^STNonGapNonProbe = 0214
^STNonGapProbe = 0215
^STGapNonProbe = 0216
^STGapProbe = 0217

^ProbeTrial = 0221
^AutoTrial = 0222

^PokeOff1 = 1001
^PokeOff2 = 1002
^PokeOff3 = 1003
^PokeOff4 = 1004
^PokeOn1 = 1011
^PokeOn2 = 1012
^PokeOn3 = 1013
^PokeOn4 = 1014
^LLeverPressOn = 1015
^LLeverPressOff = 1017
^RLeverPressOn = 1016
^RLeverPressOff = 1018
^PokeOffStan = 1301
^PokeOnStan = 1302
^PokeOffComp = 1303
^PokeOnComp = 1304
^PokeOffCtrl = 1305
^PokeOnCtrl = 1306

^FeederLightOn = 0101  \***
^FeederLightOff = 0102  \***

\================================================================


\Dimensionalize Event and Time code array

dim w=20000
dim k=3
dim s=3
dim n=1000
dim e=1000
dim f=1000
dim a=2
dim b=2


\list q = 1,1,1,1,2  \array for RR schedule selection = mean of RR-5
\list q = 1,1,1,1,1,1,1,1,1,2  \array for RR schedule selection = mean of RR-10
\list q = 1,1,1,1,1,1,1,1,1,1,1,1,1,1,2  \array for RR schedule selection = mean of RR-15
list q = 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2  \array for RR schedule selection = mean of RR-20
\list q = 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2  \array for RR schedule selection = mean of RR-30

\===============================
\   Z-PULSES USED IN THIS PROGRAM
\ z1 = dipper up (initiate timer D)
\ z2 = reset dipper timer
\ z4 = starting timing interresponse intervals
\===============================


s.s.1,  \MATLAB TIMER "T"
s1,
        0": SET p=-1; set i=2 --->s2
s2,
        .01": SET T = T + 100000 --->sx  \Keeps time in 50th of a second

S.S.2,    \INITIALIZE
s1,
    #start:    ~initANL926;~;~SetRack (MG, 2);~;
            ~SetAmp (MG,BOX, 90);~;
            ~SetRF (MG,BOX, 10);~;~SetFreq (MG,BOX, 2500);~;

        ON^house; add p; set w(p)= ^HouseLightOn + T---> s2
s2,
    #z7:    --->s3
    30':     --->s3

s3,
    .01": if S.S.6=1 [@end, @wait]
        @end: OFF^LeftLever; add p; set w(p)=^LLeverOff--->s4
        @wait:--->s3

s4,
    .01":    OFF^house;add p; set w(p) = ^HouseLightOff + T;

                add p; set w(p)= ^EndSession + T;
                add p; set w(p)=-987.987;
            set w(p)=-987.987;
            set w(p)=-987.987 --->stopabortflush



s.s.3,  \BP Counter and reinforcement decision
s1,
    #start:    add p; set w(p)= ^StartSession + T;
        ON^RightLever;add p;set w(p)=^RLeverOn + T;--->s2
s2,
    #z2:     add c; add g;
            randi l=q; show 5, RR_Sched, l;
            if l=2 [@Reinf,@MoreBP]
                @Reinf: z1; z6; --->s2
                @MoreBP:--->s2

S.S.4  \Right Press recorder
s1,
    #start: --->s2
s2,
       .1":     if a(0) > 0 [@press, @nopress]
            @press: if b(0) = 0 [@leveron, @noleveron]
                    @leveron: set b(0) = 1; set a(0) = 0;
                          z2; add s(2);show 2, RLever, s(2);
                          add p; set w(p) = ^RLeverPressOn+T --->s2
                    @noleveron: set b(0) = 1; set a(0)=0--->s2
            @nopress: if b(0) = 1 [@stop, @nostop]
                    @stop:    set b(0) = a(0); set a(0) = 0;
                        add p; set w(p) = ^RLeverPressOff + T--->s2
                    @nostop:set b(0) = a(0); set a(0) = 0--->s2
        #R^RLever2: set a(0) = a(0) + 1--->sx



S.S.5  \Left Press recorder
s1,
    #start: --->s2
s2,
       .1":     if a(1) > 0 [@press, @nopress]
            @press: if b(1) = 0 [@leveron, @noleveron]
                    @leveron: set b(1) = 1; set a(1) = 0;
                          add s(1);show 2, LLever, s(1);
                                         add p; set w(p) = ^LLeverPressOn+T --->s2
                    @noleveron: set b(1)=1; set a(1)=0--->s2
            @nopress: if b(1)=1 [@stop, @nostop]
                    @stop:    set b(1)=a(1); set a(1)=0;
                        add p; set w(p)=^LLeverPressOff+T--->s2
                    @nostop:set b(1)=a(1); set a(1)=0--->s2
        #R^LLever2: set a(1)=a(1)+1--->sx

S.S.6,
s1,
    #z6:    ON^dipper; add j; show 4, Dipper, j;
                 add p; set w(p) = ^DipOn + T--->s2

s2,
    .5":    ~ondur(MG,BOX,200);~;--->s3
s3,
         4.5":    OFF^dipper; add p; set w(p) = ^DipOff + T;
            if j>1000 [@done, @more]
                @done: z7--->s1
                @more: --->s1

S.S.7,  \Head Entry (Input 3) COUNTER
S1,
    #START:SHOW 3,HeadIn,v--->S2
S2,
    #R^headIN: add v; SHOW 3,HeadIn,v; add p; set w(p) = ^PokeOn1 + T---> sx


S.S.8, \Session Duration Clock
s1,
    #start:--->s2
s2,
    1": set k(0)=k(0)+.01; if k(0)>.59 [@AddMin, @NoAdd]
        @AddMin: add k(1); set k(0)=0; set k(2)=k(0)+k(1); show 1, Session, k(2) --->s2
        @NoAdd: set k(2)=k(0)+k(1); show 1, Session, k(2)--->s2
S.S.9,
S1,
    #z1: add m; set n(m)=c; set c=0 --->s1

S.S.10, \records response rate in 1 min bins
s1,
    #start: --->s2
s2,
    1':     set e(d)=g; set g=0;
        set f(d)=h; set h=0; add d;--->s2





