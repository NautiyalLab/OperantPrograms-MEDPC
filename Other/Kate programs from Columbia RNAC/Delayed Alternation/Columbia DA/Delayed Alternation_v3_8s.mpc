\                        C O M M E N T S
\
\ Delayed Alternation
\ Kathleen Taylor 7/3/14
\ written for RNAC boxes.  Check inputs and outputs

\only save W variable to data file*******
DISKFORMAT = 13
DISKVARS = E,L,W    \
DISKCOLUMNS = 1

                   \  Inputs ****************************
^headIN = 4        \  IR head entry detector

^LLever = 2       \  left lever press
^RLever = 1       \  right lever press


                   \  Outputs ****************************
^leftlever = 8
^rightlever = 7
^leftlight=3
^rightlight=4

^dipper = 6       \ On Liquid Dipper
^house = 1         \houselight




\  Inputs ****************************
\^LLever = 1       \  left lever press
\^RLever = 2       \  right lever press
\^HeadIn = 3       \  IR head entry detector
\^HeadOut = 4      \ IR head exit detector



                  \  Outputs ****************************
\^Leftlever = 1
\^Rightlever = 2
\^Fan = 12          \ Fans for Box ventilation
\^Dipper = 3        \ On Liquid Dipper
\^feederlight = 8   \ Light in the Head Entry Hole; Signal being used in this exp.
\^House = 7         \houselight



\  VARIABLES USED IN THIS PROGRAM
\   a = holder for lever press start
\   b = holder for lever press end
\   c = master timer (in seconds, with 1/10s resolution)
\   d = ITI dur, selected from list i
\  (e) = 1=Trial Counter; 2=LeftCorrect; 3=rightCorrect (LCorrect means start with left press,alternate to right)
\   f = Lever Choice (1=left, 2=right)
\   g =
\   h = list of delay durations
\   i = list array of ITI durations
\   j = time holder
\   k = session clock
\   l =
\   m =
\   n =
\   o =
\   p =
\   q
\   r = lever press record
\   s =
\   t = master timer
\   u
\   v
\  (w) = time and event code for matlab
\   x =
\   y =
\   z =


\  \  SHOW POSITIONS
\  1 =
\  2 = Left Lever Responses
\  3 = trial counter
\  4 = Session Time (minutes)
\  5 = head entries
\  6 =

\======================================================
\ MATLAB standardized codes
\ *** = used in this program

^Feed1 = 0021
^Feed2 = 0022
^Feed3 = 0023
^Feed4 = 0024
^DipOn = 0025   \***
^DipOff = 0026   \***
^LLeverOn = 0027 \***
^RLeverOn= 0028  \***
^LLeverOff = 0029 \***
^RLeverOff = 0030 \***
^LightOff1 = 0031
^LightOff2 = 0032
^LightOff3 = 0033
^LightOff4 = 0034
^LightOn1 = 0041
^LightOn2 = 0042
^LightOn3 = 0043
^LightOn4 = 0044
^ToneOff1 = 0051
^ToneOff2 = 0052
^ToneOff3 = 0053
^ToneOff4 = 0054
^ToneOn1 = 0061
^ToneOn2 = 0062
^ToneOn3 = 0063
^ToneOn4 = 0064
^WNoiseOff1 = 0071
^WNoiseOff2 = 0072
^WNoiseOff3 = 0073
^WNoiseOff4 = 0074
^WNoiseOn1 = 0081
^WNoiseOn2 = 0082
^WNoiseOn3 = 0083
^WNoiseOn4 = 0084

^StartTrial = 0111
^EndTrial = 0112
^StartSession = 0113  \***
^EndSession = 0114   \***
^HouseLightOff = 0115
^HouseLightOn = 0116

^StartIti = 0121
^EndIti = 0122
^LightOffStan = 0201
^LightOnStan = 0202
^LightOffComp = 0203
^LightOnComp = 0204
^LightOffCtrl = 0205
^LightOnCtrl = 0206
^FeedStan = 0207
^FeedComp = 0208
^StartStanFlash = 0209
^StopStanFlash = 0211
^StartCompFlash = 0212
^StopCompFlash = 0213
^STNonGapNonProbe = 0214
^STNonGapProbe = 0215
^STGapNonProbe = 0216
^STGapProbe = 0217

^ProbeTrial = 0221
^AutoTrial = 0222

^PokeOff1 = 1001
^PokeOff2 = 1002
^PokeOff3 = 1003
^PokeOff4 = 1004
^PokeOn1 = 1011
^PokeOn2 = 1012
^PokeOn3 = 1013
^PokeOn4 = 1014
^LPressOn = 1015
^RPressOn = 1016
^LPressOff = 1017
^RPressOff = 1018
^PokeOffStan = 1301
^PokeOnStan = 1302
^PokeOffComp = 1303
^PokeOnComp = 1304
^PokeOffCtrl = 1305
^PokeOnCtrl = 1306


\================================================================


\Dimensionalize Event and Time code array
dim w=10000
dim a=2
dim b=2
dim e=3
dim k=4
dim r=2

\list of delay durations (in hundredths of seconds) *change this to change delay durations
list h = 800

\ITI duration list (in hundredths of seconds)
list i = 2000
\list i = 500


\===============================
\   Z-PULSES USED IN THIS PROGRAM
\ z1 = left lever press indicator
\ z2 = right lever press indicator
\ z3 = Trial Start
\ z4 =
\===============================

\===============================
\  Show Positions
\ 1 = Session Timer
\ 2 = Left Presses
\ 3 = Right Presses
\ 4 = Reinforcers
\ 5 = HE indicator
\===============================


s.s.1,  \MATLAB TIMER "T"
s1,
        0": SET p = -1; set m = 1--->s2
s2,
        .01": SET T = T + 100000 --->sx \Keeps time in 100th of a second

S.S.3,    \INITIALIZE
s1,
    #start:    add p; set w(p)= ^StartSession+T;--->s2
s2,
    60':    --->s3
s3,
    0":    add p; set w(p)= ^EndSession + T;
        add p; set w(p)=-987.987;--->stopabortflush


S.S.2,    \Trials
s1,
    #start: randd j=i--->s2
s2,
    j#T: set e(1)=e(1)+1; show 2, Trial, e(1);
        on^house; add p; set w(p)= ^HouseLightOn+T;
        on^LeftLever; add p; set w(p)= ^LLeverOn+T;
        on^RightLever; add p; set w(p)= ^RLeverOn+T;--->s3
s3,
    #R^LLever: set f=1; add p; set w(p)= ^LPressOn+T; --->s4
    #R^RLever: set f=2; add p; set w(p)= ^RPressOn+T; --->s4
s4,
    .25": randd j=h; off^LeftLever; add p; set w(p)= ^LLeverOff+T;
        off^RightLever; add p; set w(p)= ^RLeverOff+T; --->s5
s5,
    j#T:on^LeftLever; add p; set w(p)= ^LLeverOn+T;
        on^RightLever; add p; set w(p)= ^RLeverOn+T;randd j=i --->s6
s6,
    #R^LLever:add p; set w(p)= ^LPressOn+T; if f=1 [@same, @different]
        @same: --->s8
        @different: z6;set e(3)=e(3)+1; show 4, R_Corr, e(3);--->s9
    #R^RLever: add p; set w(p)= ^RPressOn+T;if f=2 [@same, @different]
        @same: --->s8
        @different: z6; set e(2)=e(2)+1; show 3, L_Corr, e(2); --->s9
s7,
    #z3:    off^house; add p; set w(p)= ^HouseLightOff+T;--->s2
s8,
    .25":    off^house; add p; set w(p)= ^HouseLightOff+T;
        	off^LeftLever; add p; set w(p)= ^LLeverOff+T;
        	off^RightLever; add p; set w(p)= ^RLeverOff+T;--->s2
s9,
    .25": off^LeftLever; add p; set w(p)= ^LLeverOff+T;
                off^RightLever; add p; set w(p)= ^RLeverOff+T;--->s7

S.S.4,  \Head Entry (Input 3) COUNTER
s1,
     #START:--->S2
s2,
      #R^headIN: add p; set w(p) = ^PokeOn1 + T---> sx


S.S.5, \Dipper Delivery
s1,
    #z6:      ON^dipper; add p;set w(p)=^dipON+T;
               add l;Show 5, Dippers, l; --->s2
s2,
    5":    OFF^dipper;add p;set w(p)=^DipOff+T; z3 --->s1

\S.S.6,  \Bar Press Detector - Left Lever
\s1,
\    #Start: --->s2
\s2,
\       .05": if a(0) > 0 [@press, @nopress]
\            @press: if b(0) = 0 [@leveron, @noleveron]
\                   @leveron: z1;add p; set w(p)= ^LPressOn+T;
\                            set b(0) = 1; set a(0) = 0; --->s2
\                    @noleveron: set b(0) = 1; set a(0) = 0--->s2
\        @nopress: if b(0) = 1 [@stop, @nostop]
\                @stop: add p;set w(p)= ^LPressOff+T;
\                      set b(0) = a(0); set a(0) = 0; --->s2
\                @nostop:set b(0) = a(0); set a(0) = 0; --->s2
\        #R^LLever: set a(0)=a(0)+1; --->sx

\S.S.7,  \Bar Press Detector - Right Lever
\s1,
\    #Start: --->s2
\s2,
\       .05": if a(1) > 0 [@press, @nopress]
\            @press: if b(1) = 0 [@leveron, @noleveron]
\                    @leveron: z2;add p;set w(p)= ^RPressOn+T;
\                           set b(1) = 1; set a(1) = 0; --->s2
\                    @noleveron: set b(1) = 1; set a(1) = 0--->s2
\            @nopress: if b(1) = 1 [@stop, @nostop]
\                    @stop: add p;set w(p)= ^RPressOff+T;
\                          set b(1) = a(1); set a(1) = 0; --->s2
\                    @nostop:set b(1) = a(1); set a(1) = 0; --->s2
\       #R^RLever: set a(1)=a(1)+1; --->sx
S.S.8, \Session Duration Clock
s1,
    #start:--->s2
s2,
    1":    set k(0)=k(0)+.01; if k(0)>.59 [@AddMin, @NoAdd]
            @AddMin: add k(1); set k(0)=0; set k(2)=k(0)+k(1);
                 show 1, Session, k(2)--->s2
            @NoAdd: set k(2)=k(0)+k(1); show 1, Session, k(2)--->s2


