\                                                                        
\ ******************************************************************
\
\
\                        C O M M E N T S
\
\ Created 03/20/09 by KTaylor
\ This program last for 20 min.
\ Pavlovian response of lever press



\  CONSTANTS USED IN THIS PROGRAM
\  Inputs ****************************
^headIN = 4       \  IR head entry detector
\^headOUT = 4      \ IR head exit detector
^LLever2 = 2       \  left lever press
^RLever2 = 1       \  right lever press
 

                  \  Outputs ****************************
^leftlever = 8
^rightlever = 7
\^fan = 12         \ Fans for Box ventilation  
^dipper = 6        \ On Liquid Dipper
\^feederlight = 8   \ Light in the Head Entry Hole; Signal being used in this exp.
^house = 1         \houselight

^RedLeft = 3      \stimulus lights above Left Lever
^YellowLeft = 3
^GreenLeft = 3

^RedRight = 4     \stimulus lights above Right Lever
^YellowRight = 4
^GreenRight = 4                                          


\  VARIABLES USED IN THIS PROGRAM
\   a = bar press counter
\   b = bar press holder
\   c = holder for ITI duration
\   d = ITI distribution selector   
\   e = 
\   f = number of earned pellets
\   g = counts rewarded lever presses  
\   h = list for trial type
\   i = selector for distribution
\   j = 
\   k = session timer (sec)
\   l = pellet counter
\   m = ITI durations
\   n = 
\   o = 
\   p = event counter for w array
\   q = 
\   r = press counter
\   s =  Trial Counter
\   t =           
\  (u) = event identity array (see KEY below)
\  (v) = event time array (records time of u events)
\  (w) = Matlab Event code array
\   x = 


\  SHOW POSITIONS
\  1 = master timer
\  2 = 
\  3 = 
\  4 = Total Pellets
\  5 = lever press indicator (1=pressing)

\   Z-PULSES USED IN THIS PROGRAM

\   z1 = start program body
\   z2 = end program          
\   z3 =   
\   z4 = choose and start iti
\   z5 = 
\   z6 = drop pellet
\   z7 = 
\   z8 =                     
\   z9 = 


\======================================================
\ MATLAB standardized codes
\ *** = used in this program

^dipON = 0025
^dipOFF = 0026

^LLeverOn = 0027 
^RLeverOn= 0028   
^LLeverOff = 0029 
^RLeverOff = 0030 

^LightOffRed = 0031 
^LightOffWhite = 0032 
^LightOffGreen = 0033  
^LightOffHouse = 0034  
^LightOnRed = 0041 
^LightOnGreen = 0042 
^LightOnWhite = 0043 
^LightOnHouse = 0044

^StartTrial = 0111
^EndTrial = 0112
^StartSession = 0113  
^EndSession = 0114   

^HouseLightOff = 0115
^HouseLightOn = 0116

^CSPlusTrial = 0221
^CSMinusTrial = 0222

^OnFan = 0117
^OffFan = 0118

^StartIti = 0121
^EndIti = 0122

^HeadExit = 1001 
^HeadEntry = 1011 


^LLeverPress = 1015
^RLeverPress = 1016
^LLeverPressOff = 1017
^RLeverPressOff = 1018


\================================================================


\ w array is used for matlab codes

DISKFORMAT = 15
DISKVARS = W,S,R,G
DISKCOLUMNS = 1

dim w=100000
dim a = 3
dim b = 3
dim s = 2
dim r = 2
dim k = 6

list d = 1, 2, 3
list h = 2,2,2,2,2,2,2,2,2,2  

list m = 4100,4000,5100,5800,4000,6100,5100,3800,4300,3800,
     3500,7200,6300,3700,5300,3700,4200,5100,5100,5800
list n = 5200,4800,3700,4700,5200,3900,4200,3800,7100,3500,
     8100,5100,3700,4400,3500,4000,3600,4100,9900,3500
List o = 3400,5400,4000,8300,7700,3400,3400,4000,3800,3600,
     5100,6400,3900,3700,9100,3800,5600,4100,3600,3700

\short ITI for program testing
\list m = 500 
\list n = 500 
\list o = 500

S.S.1,  \MATLAB TIMER "T"
s1,     
        #start: SET p = 0; randd i=d --->s2
s2,    
        .01": SET T = T + 100000--->sx

S.S.2,
s1,   \Session Start Stop Controller
       #start: --->s2
s2,
    .05":    set w(p) = ^StartSession +T; add p;
        \ON^Fan; set w(p)= ^OnFan + T; add p;
        ON^house; set w(p)= ^LightOnHouse + T; add p; z4;
        ~initANL926;~;~SetRack (MG, 2);~;
                     ~SetAmp (MG,BOX, 90);~;
                     ~SetRF (MG,BOX, 10);~;~SetFreq (MG,BOX, 2500);~;---> s3
s3,         
    #z2:    --->s4
s4,
    20":	Off^House; set w(p)=^LightOffHouse+T; add p;
	\off^Fan; set w(p)=^OffFan+T; add p; 
        set w(p)=^EndSession+T;add p;
        set w(p) = -987.987; ---> stopabortflush
                                                                          
S.S.3, \Trial Controller
s1,     
    #z1:     --->s2
s2,
    c#T:     set w(p)= ^EndITI+T; add p;--->s3
s3,
    6":    randd e=h; if e=1 [@Left, @Right]
            @Left: set w(p)= ^CSPlusTrial + T; add p;
                add s(0);add s(2); show 2, LeftLever, s(2);
                  ON^LeftLever; set w(p)=^LLeverOn+T; add p;--->s4                                                                    
            @Right: set w(p)= ^CSMinusTrial + T; add p;
                add s(1); add s(2); show 2, RightLever, s(2);
                  ON^RightLever; set w(p)=^RLeverOn+T; add p;--->s5
s4,                                                                   
    6":     if g<=5 [@free, @no]
                     @free: z6; Off^Leftlever; set w(p)=^LLeverOff+T; add p;
        if s(2)<60 [@more, @End]
            @more:    z4 --->s1        
            @end: z2 --->s1
                     @no: Off^Leftlever; set w(p)=^LLeverOff+T; add p;
        if s(2)<60 [@more, @End]
            @more:    z4 --->s1        
            @end: z2 --->s1 
          #R^LeftLever: add g; z6; Off^Leftlever; set w(p)=^LLeverOff+T; add p; 
        if s(2)<60 [@more, @End]
            @more:    z4 --->s1        
            @end: z2 --->s1    
s5,
    6":     if g<=5 [@free, @no]
                     @free: z6; Off^Rightlever; set w(p)=^RLeverOff+T; add p;
        if s(2)<60 [@more, @End]
            @more:    z4 --->s1        
            @end: z2 --->s1
                     @no: Off^Rightlever; set w(p)=^RLeverOff+T; add p;
        if s(2)<60 [@more, @End]                                                             
            @more:    z4 --->s1        
            @end: z2 --->s1 
          #R^RightLever: add g; z6; Off^Rightlever; set w(p)=^RLeverOff+T; add p; 
        if s(2)<60 [@more, @End]
            @more:    z4 --->s1        
            @end: z2 --->s1    

S.S.4,  \Bar Press Detector - Left Lever       
s1,
    #Start: --->s2
s2,
       .1": if a(0) > 0 [@press, @nopress]
        @press: if b(0) = 0 [@leveron, @noleveron]
            @leveron: set w(p)= ^LLeverPress+T; add p;
                 add r(0); show 3, LeftPress, r(0);
                  set b(0) = 1; set a(0) = 0; --->s2
            @noleveron: set b(0) = 1; set a(0) = 0--->s2
        @nopress: if b(0) = 1 [@stop, @nostop]
            @stop:    set w(p)= ^LLeverPressOff+T; add p;
                  set b(0) = a(0); set a(0) = 0; --->s2
            @nostop:set b(0) = a(0); set a(0) = 0; --->s2               
        #R^LeftLever: set a(0) = a(0) + 1; --->sx        
                                                 
S.S.5,  \Bar Press Detector - Right Lever         
s1,                        
    #Start: --->s2          
s2,
       .1": if a(1) > 0 [@press, @nopress]
        @press: if b(1) = 0 [@leveron, @noleveron]
            @leveron: set w(p)= ^RLeverPress+T; add p;
                  add r(1); show 4, RightPress, r(1); 
                 set b(1) = 1; set a(1) = 0; --->s2
            @noleveron: set b(1) = 1; set a(1) = 0--->s2
        @nopress: if b(1) = 1 [@stop, @nostop]
            @stop:    set w(p)= ^RLeverPressOff+T; add p;                    
                  set b(1) = a(1); set a(1) = 0; --->s2     
            @nostop:set b(1) = a(1); set a(1) = 0; --->s2 
        #R^RightLever: set a(1) = a(1) + 1; --->sx 

S.S.6,  \Head Entry Detector
s1,                       
    #Start: --->s2
s2,
       .1": if a(2) > 0 [@HE, @noHE]
        @HE: if b(2) = 0 [@HEon, @noHEon]
            @HEon: set w(p)= ^headIN+T; add p;
                   set b(2) = 1; set a(2) = 0; --->s2
            @noHEon: set b(2) = 1; set a(2) = 0--->s2
        @noHE: if b(2) = 1 [@stop, @nostop]
            @stop:    set w(p)= ^headIN+T; add p;
                  set b(2) = a(2); set a(2) = 0; --->s2
            @nostop:set b(2) = a(2); set a(2) = 0; --->s2 
        #R^headIN: set a(2) = a(2) + 1; --->sx 

S.S.7, \dipper presentation
s1,
       #z6:    ON^dipper;     
        set w(p)=^dipON+T; add p;
        add l; show 5, Dips,l;--->s2  
        
s2, 
       .5":~ondur(MG, BOX, 200);~;--->s3 

s3,   
        7.5": OFF^dipper;
             add p; set w(p) = ^dipOFF+T--->s1 

                                               
s.s.8 \Session Duration Clock                
s1,
    #start:--->s2                                                                
s2,
    1":    set k(0)=k(0)+.01; if k(0)>.59 [@AddMin, @NoAdd]
            @AddMin: add k(1); set k(0)=0; 
                 set k(2)=k(0)+k(1); 
                 show 1, Session, k(2) --->s2                                
            @NoAdd:  set k(2)=k(0)+k(1); 
                 show 1, Session, k(2)--->s2
                                    
S.S.9  \selects ITI from list chosen ramdomly for this session
s1,
    #z4:     set w(p)= ^StartITI + T; add p; 
        if i=1 [@List1, @other]
        @list1: randd c=m; z1 --->s1
        @other: if i=2 [@List2, @List3]
            @List2: randd c=n; z1 --->s1
            @List3: randd c=o; z1 --->s1
