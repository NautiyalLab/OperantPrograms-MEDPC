\                        C O M M E N T S
\
\ Two Lever CRF
\ Lever retracts after 2 reinforcers for ITI of mean=30s
\ Left and right levers alternate randomly
\ KTaylor 02/13/14
\ BAkdogan_06/14/17_Fixed-ratio 1, lever retracts after each reinforcer
\ BGersten_07/18/17_ switch from pellet to dipper


DISKFORMAT = 13
DISKVARS = W,R,S
DISKCOLUMNS = 1

                   \  Inputs ****************************
^headIN = 3        \  IR head entry detector
^headOUT = 4       \ IR head exit detector
^LLever = 1       \  left lever press
^RLever = 2       \  right lever press


                   \  Outputs ****************************
^leftlever = 1
^rightlever = 2
^dipper = 3        \ On Liquid Dipper
^house = 7         \houselight


\  VARIABLES USED IN THIS PROGRAM
\   a = holder for lever press start
\   b = holder for lever press end
\   c = master timer (in seconds, with 1/10s resolution)
\   d = ITI duration holder
\   e = Lever choice holder
\   f = Right Lever Out indicator
\   g = Left Lever Out indicator
\   h = list for random lever insertion choice
\   i = list array of ITI durations
\   j = dipper counter
\   k = session clock
\   l =
\   m = resetting dipper counter
\   n =
\   o =
\   p =
\   q
\   r = Left press record
\   s = Right press record
\   t = master timer
\   u
\   v
\  (w) = data array
\   x =
\   y =
\   z =


\  \  SHOW POSITIONS
\  1 = Right lever responses
\  2 = Left lever responses
\  3 = Trial counter
\  4 = Session Time (minutes)
\  5 =

\======================================================
\ Event codes for time stamped events in data array


^DipOn = 0025
^DipOff = 0026
^LLeverOn = 0027
^RLeverOn= 0028
^LLeverOff = 0029
^RLeverOff = 0030

^StartTrial = 0111
^EndTrial = 0112
^StartSession = 0113
^EndSession = 0114
^HouseLightOff = 0115
^HouseLightOn = 0116

^StartIti = 0121
^EndIti = 0122
^PokeOff1 = 1001
^PokeOn1 = 1011
^LPressOn = 1015
^RPressOn = 1016
^LPressOff = 1017
^RPressOff = 1018


\================================================================


\Dimensionalize Event and Time code array
dim w=10000
dim a=2
dim b=2
dim k=4


\ITI duration list (in hundredths of seconds)
list i = 300,300,400,500,600,600,700,700,800,900,1000,1000,1100,
     1200,1300,1400,1500,1500,1600,1700,1800,1900,2000,2200,2300,
     2400,2500,2700,2800,2900,3000,3200,3200,3400,3600,3800,4000,
     4200,4400,4700,4900,5300,5600,6000,6400,6900,7500,8200,9300,9800

\only right
list h = 2

\===============================
\   Z-PULSES USED IN THIS PROGRAM
\ z1 = left lever press indicator
\ z2 = right lever press indicator
\ z3 = end session
\ z4 =
\===============================

\===============================
\  Show Positions
\ 1 = Session Timer
\ 2 = Left Presses
\ 3 = Right Presses
\ 4 = Reinforcers
\ 5 = HE indicator
\===============================


s.s.1,  \ Clock for Time-Stamped event codes
s1,
    0":     ~initANL926;~;~SetRack (MG, 2);~;
            ~SetAmp (MG,BOX, 90);~;
               ~SetRF (MG,BOX, 10);~;~SetFreq (MG,BOX, 2500);~;
        set p=-1; --->s2
s2,
    .01":    set T=T+100000 --->sx

S.S.2,    \Program controller
s1,
    #start:    add p; set w(p)= ^StartSession + T; z1--->s2
s2,
    60':    --->s3
    #z5:    --->s3
s3,
    1": add p; set w(p)= ^EndSession + T;
        add p; set w(p)=-987.987;--->stopabortflush

s.s.3,  \Trial and ITI Controller
s1,
    #start: set d=0 --->s2
s2,
    d#T:    add p; set w(p)=^StartTrial+T; randd e=h; if e=1[@onLeft,@onRight]
            @onLeft: ON^Leftlever; add p; set w(p)=^LLeverOn+T;set f=1 --->s3
            @onRight: ON^Rightlever; add p; set w(p)=^RLeverOn+T;set f=2 --->s3
s3,
    #z2:    add j; show 4, Dipper, j; z6 --->s4
    #z3:    add j; show 4, Dipper, j; z6 --->s4
s4,
    #z4:    --->s2    \initiates ITI after 1 press

S.S.4, \Reinforcement generator
s1,
    #z6:  ON^Dipper; add p;set w(p)=^DipOn + T;
          if f=1[@left, @right]
                @left: Off^Leftlever; add p; set w(p)=^LLeverOff+T --->s2
                @right: Off^Rightlever; add p; set w(p)=^RLeverOff+T---> s2
s2,
    5":  OFF^Dipper; add p;set w(p)=^DipOff + T; ---> s3
s3,
    0": if j > 39 [@end, @more]
            @end: z5 --->s1
            @more: add p; set w(p)=^EndTrial+T;randd d=i; z4; --->s1

S.S.5,  \Head Entry (Input 3) COUNTER
s1,
    #Start:--->S2
s2,
    #R^headIN:    add p; set w(p) = ^PokeOn1 + T---> sx
    #R^headOUT:    add p; set w(p) = ^PokeOff1 + T--->sx

S.S.6  \Alternate HE recorder
s1,
    #Start: --->s2
s2,
       .1":    if a(2) > 0 [@HE, @noHE]
            @HE: if b(2) = 0 [@HEon, @noHEon]
                @HEon:    set b(2) = 1; set a(2) = 0;
                    add p;set w(p)=^PokeOn1+T --->s2
                @noHEon: set b(2)=1; set a(2)=0--->s2
            @noHE:    if b(2)=1 [@stop, @nostop]
                @stop:    set b(2)=a(2); set a(2)=0;
                    add p;set w(p)=^PokeOff1+T--->s2
                @nostop:set b(2)=a(2); set a(2)=0--->s2
        #R^headIN: set a(2)=a(2)+1--->sx

S.S.7,  \Lever Press Detector - Left Lever
s1,
    #Start: --->s2
s2,
    .05":    if a(0) > 0 [@press, @nopress]
            @press:    if b(0) = 0 [@leveron, @noleveron]
                    @leveron: add p; set w(p)= ^LPressOn+T;
                          add r; show 2, LeftPress, r;z2;
                          set b(0) = 1; set a(0) = 0; --->s2
                    @noleveron: set b(0) = 1; set a(0) = 0--->s2
            @nopress: if b(0) = 1 [@stop, @nostop]
                    @stop:  add p;set w(p)= ^LPressOff+T;
                        set b(0) = a(0); set a(0) = 0; --->s2
                    @nostop:set b(0) = a(0); set a(0) = 0; --->s2
        #R^LLever: set a(0)=a(0)+1; --->sx

S.S.8,  \Lever Press Detector - Right Lever
s1,
    #Start: --->s2
s2,
    .05":    if a(1) > 0 [@press, @nopress]
            @press: if b(1) = 0 [@leveron, @noleveron]
                    @leveron: add p;set w(p)= ^RPressOn+T;
                          add s; show 3, RightPress, s; z3;
                          set b(1) = 1; set a(1) = 0; --->s2
                    @noleveron: set b(1) = 1; set a(1) = 0--->s2
            @nopress: if b(1) = 1 [@stop, @nostop]
                    @stop:    add p;set w(p)= ^RPressOff+T;
                        set b(1) = a(1); set a(1) = 0; --->s2
                    @nostop:set b(1) = a(1); set a(1) = 0; --->s2
        #R^RLever: set a(1)=a(1)+1; --->sx

S.S.9, \Session Duration Clock
s1,
    #start:--->s2
s2,
    1":    set k(0)=k(0)+.01; if k(0)>.59 [@AddMin, @NoAdd]
            @AddMin: add k(1); set k(0)=0; set k(2)=k(0)+k(1);
                 show 1, Session, k(2)--->s2
            @NoAdd: set k(2)=k(0)+k(1); show 1, Session, k(2)--->s2
