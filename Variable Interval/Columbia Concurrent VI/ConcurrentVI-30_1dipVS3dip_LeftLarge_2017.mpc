\                        C O M M E N T S
\


\only save W variable to data file*******
DISKFORMAT = 13
DISKVARS = W    \"DISKVARS" only prints selected variables to datafile
DISKCOLUMNS = 1

                   \  Inputs ****************************
^headIN = 3        \  IR head entry detector

^LLever2 = 1       \  left lever press
^RLever2 = 2       \  right lever press


                   \  Outputs ****************************
^leftlever = 1
^rightlever = 2
^dipper = 3       \ On Liquid Dipper
^house = 7         \houselight



\  VARIABLES USED IN THIS PROGRAM
\   a = holder for lever press start
\   b = holder for lever press end
\   c = master timer (in seconds, with 1/10s resolution)
\   d = ITI dur, selected from list i
\   e =
\   f =
\   g = go or no go dipper variable for RIGHT
\   h = go or no go dipper variable for LEFT
\   i = list array of ITI durations
\   j =
\   k = session clock
\   l = yes/no decisions for RI-10 for Right
\   m = yes/no decisions for RI-10 for Left
\   n =
\   o =
\   p = index for W array
\   q = previous lever press side // 1=right, 2=left
\   r = lever press record
\   s = selection from list for Right
\   t = master timer
\   u = selection from list for Left
\   v
\  (w) = time and event code for matlab
\   x =
\   y =
\   z =


\  \  SHOW POSITIONS
\  1 =
\  2 = Left Lever Responses
\  3 = trial counter
\  4 = Session Time (minutes)
\  5 = head entries
\  6 =

\======================================================
\ MATLAB standardized codes
\ *** = used in this program

^Feed1 = 0021
^Feed2 = 0022
^Feed3 = 0023
^Feed4 = 0024
^DipOn = 0025   \***
^DipOff = 0026   \***
^LLeverOn = 0027 \***
^RLeverOn= 0028  \***
^LLeverOff = 0029 \***
^RLeverOff = 0030 \***
^LightOff1 = 0031
^LightOff2 = 0032
^LightOff3 = 0033
^LightOff4 = 0034
^LightOn1 = 0041
^LightOn2 = 0042
^LightOn3 = 0043
^LightOn4 = 0044
^ToneOff1 = 0051
^ToneOff2 = 0052
^ToneOff3 = 0053
^ToneOff4 = 0054
^ToneOn1 = 0061
^ToneOn2 = 0062
^ToneOn3 = 0063
^ToneOn4 = 0064
^WNoiseOff1 = 0071
^WNoiseOff2 = 0072
^WNoiseOff3 = 0073
^WNoiseOff4 = 0074
^WNoiseOn1 = 0081
^WNoiseOn2 = 0082
^WNoiseOn3 = 0083
^WNoiseOn4 = 0084

^StartTrial = 0111
^EndTrial = 0112
^StartSession = 0113  \***
^EndSession = 0114   \***
^HouseLightOff = 0115
^HouseLightOn = 0116

^StartIti = 0121
^EndIti = 0122
^LightOffStan = 0201
^LightOnStan = 0202
^LightOffComp = 0203
^LightOnComp = 0204
^LightOffCtrl = 0205
^LightOnCtrl = 0206
^FeedStan = 0207
^FeedComp = 0208
^StartStanFlash = 0209
^StopStanFlash = 0211
^StartCompFlash = 0212
^StopCompFlash = 0213
^STNonGapNonProbe = 0214
^STNonGapProbe = 0215
^STGapNonProbe = 0216
^STGapProbe = 0217

^ProbeTrial = 0221
^AutoTrial = 0222

^PokeOff1 = 1001
^PokeOff2 = 1002
^PokeOff3 = 1003
^PokeOff4 = 1004
^PokeOn1 = 1011
^PokeOn2 = 1012
^PokeOn3 = 1013
^PokeOn4 = 1014
^LPressOn = 1015
^RPressOn = 1016
^LPressOff = 1017
^RPressOff = 1018
^PokeOffStan = 1301
^PokeOnStan = 1302
^PokeOffComp = 1303
^PokeOnComp = 1304
^PokeOffCtrl = 1305
^PokeOnCtrl = 1306


\================================================================


\Dimensionalize Event and Time code array
dim w=10000
dim a=2
dim b=2
dim k=4
dim r=2


list l = 1, 0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
list m = 1, 0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0


\===============================
\   Z-PULSES USED IN THIS PROGRAM
\ z1 = left lever press indicator
\ z2 = right lever press indicator
\ z3 = end session
\ z4 =
\===============================

\===============================
\  Show Positions
\ 1 = Session Timer
\ 2 = Left Presses
\ 3 = Right Presses
\ 4 = Reinforcers
\ 5 = HE indicator
\===============================


s.s.1,  \MATLAB TIMER "T"
s1,
        0": SET p = -1; --->s2
s2,
        .01": SET T = T + 100000 --->sx \Keeps time in 100th of a second

S.S.2,    \INITIALIZE
s1,
           #start:~initANL926;~;~SetRack (MG, 2);~;
        ~SetAmp (MG,BOX, 90);~;
        ~SetRF (MG,BOX, 10);~;~SetFreq (MG,BOX, 2500);~;

         ON^house; add p; set w(p)= ^HouseLightOn + T--->s2

s2,  \end after 80 reinforcers or 60 minutes
    #z3: Off^rightlever; add p; set w(p)=^RLeverOff+T;
    Off^leftlever; add p; set w(p)=^LLeverOff+T;--->s3
    60': Off^rightlever; add p; set w(p)=^RLeverOff+T;
    Off^leftlever; add p; set w(p)=^LLeverOff+T;--->s3
s3,
        10": OFF^house;add p; set w(p) = ^HouseLightOff + T;

            add p; set w(p)= ^EndSession + T;
            add p; set w(p)=-987.987;--->stopabortflush

s.s.3,  \TRIAL GENERATOR FOR RIGHT LEVER
s1,
        #start:add p; set w(p)= ^StartSession + T;
                ON^Rightlever; add p; set w(p)=^RLeverOn+T;
        ON^leftlever; add p; set w(p)=^LLeverOn+T;--->s2
s2,
        #z2: if q=2 [@hold, @go]
	      @hold:set q=1;  ---> s6
	      @go: set q=1; if g=1 [@dipperR, @nodipperR]
		@dipperR: add n; ON^dipper; add j; show 4, Dips, j;
             		add p; z4; set w(p)=^DipOn+T--->s3
		@nodipperR: ---> s2
s3,
        .5":~ondur(MG,BOX,200);~;--->s4
s4,
         4.5":OFF^dipper;add p;set w(p)=^DipOff+T;
        if j>79 [@end, @more]
            @end: z3 --->s1
            @more: --->s2
s5,
        d#t: ON^rightlever; add p;set w(p)=^RLeverOn+T; ON^leftlever; add p; 
             set w(p)=^LLeverOn+T;set n=0--->s2

s6,
	2": ---> s2

s.s.4,  \TRIAL GENERATOR FOR LEFT LEVER
s1,
        #start:add p; set w(p)= ^StartSession + T;
                ON^Rightlever; add p; set w(p)=^RLeverOn+T;
        ON^leftlever; add p; set w(p)=^LLeverOn+T;--->s2
s2,
        #z5: if q=1 [@hold, @go]
	      @hold: set q=2; ---> s6
	      @go: set q=2; if h=1 [@dipperL, @nodipperL]
		@dipper: add n; ON^dipper; add j; show 4, Dips, j;
             		add p; set w(p)=^DipOn+T--->s3
		@nodipper: ---> s2
s3,
        .5":~ondur(MG,BOX,200);~;--->s4
s4,
         4.5":OFF^dipper;add p;set w(p)=^DipOff+T;--->s7

s5,
        d#t: ON^rightlever; add p;set w(p)=^RLeverOn+T; ON^leftlever; add p; 
             set w(p)=^LLeverOn+T;set n=0--->s2

s6,
	2": ---> s2

s7,
	.5":~ondur(MG,BOX,200);~;add n; ON^dipper; add j; show 4, Dips, j;
             		add p; set w(p)=^DipOn+T--->s8
s8,
         4.5":OFF^dipper;add p;set w(p)=^DipOff+T;--->s9
      
s9,
	.5":~ondur(MG,BOX,200);~;add n; ON^dipper; add j; show 4, Dips, j;
             		add p; z6; set w(p)=^DipOn+T--->s10
s10,
         4.5":OFF^dipper;add p;set w(p)=^DipOff+T;
        if j>79 [@end, @more]
            @end: z3 --->s1
            @more: --->s2	

	

S.S.5,  \Head Entry (Input 3) COUNTER
s1,
     #START:SHOW 5,HeadIn,0--->S2
s2,
      #R^headIN: SHOW 5,HeadIn,1; add p; set w(p) = ^PokeOn1 + T---> sx


S.S.6,  \Bar Press Detector - Left Lever
s1,
    #Start: --->s2
s2,
       .05": if a(0) > 0 [@press, @nopress]
            @press: if b(0) = 0 [@leveron, @noleveron]
                   @leveron: z5;  add p; set w(p)= ^LPressOn+T;
                           add r(0); show 2, LeftPress, r(0);
                            set b(0) = 1; set a(0) = 0; --->s2
                    @noleveron: set b(0) = 1; set a(0) = 0--->s2
        @nopress: if b(0) = 1 [@stop, @nostop]
                @stop:  add p;set w(p)= ^LPressOff+T;
                      set b(0) = a(0); set a(0) = 0; --->s2
                @nostop:set b(0) = a(0); set a(0) = 0; --->s2
        #R^LLever2: set a(0)=a(0)+1; --->sx

S.S.7,  \Bar Press Detector - Right Lever
s1,
    #Start: --->s2
s2,
       .05": if a(1) > 0 [@press, @nopress]
            @press: if b(1) = 0 [@leveron, @noleveron]
                    @leveron: z2; add p; set w(p)= ^RPressOn+T;
                            add r(1); show 3, RightPress, r(1);
                           set b(1) = 1; set a(1) = 0; --->s2
                    @noleveron: set b(1) = 1; set a(1) = 0--->s2
            @nopress: if b(1) = 1 [@stop, @nostop]
                    @stop:   add p;set w(p)= ^RPressOff+T;
                          set b(1) = a(1); set a(1) = 0; --->s2
                    @nostop:set b(1) = a(1); set a(1) = 0; --->s2
        #R^RLever2: set a(1)=a(1)+1; --->sx

S.S.8, \Session Duration Clock
s1,
    #start:--->s2
s2,
    1":    set k(0)=k(0)+.01; if k(0)>.59 [@AddMin, @NoAdd]
            @AddMin: add k(1); set k(0)=0; set k(2)=k(0)+k(1);
                 show 1, Session, k(2)--->s2
            @NoAdd: set k(2)=k(0)+k(1); show 1, Session, k(2)--->s2

s.s.9, \random interval generator for RIGHT
s1, 
	#start: ---> s2

s2, 
	2": RANDD s = l;
	if s=1 [@ready, @notready]
	@ready: set g=1; --->s3
	@notready: set g=0; --->s2

s3, 
	
	#z4: --->s2


s.s.10, \random interval generator for LEFT
s1, 
	#start: ---> s2

s2, 
	2": RANDD u = m;
	if u=1 [@ready, @notready]
	@ready: set h=1; --->s3
	@notready: set h=0; --->s2

s3, 
	
	#z6: --->s2


